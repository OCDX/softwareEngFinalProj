Users:
	Researchers
	Students
	Data Scientists
	System Administrators
Acitivies:
	Browse Manifest:
		-The user should be able to view all of the manifests listed. This should be a webpage feature, drawing from a backend storage device,
		 and displaying the relevant information pulled in. There should be descriptions associated with them, displayed. The interface of
		 this page should be by clicking on corresponding file (button, link, design decided later), and by searching through the files by 
		 keyword.
	Contribute To Database for an existing dataset:
		(This is a brainstorm, so I feel  it appropriate to put comments such as these. I am not sure what he wants from this, very confused 
		about the specifics.)
		
		-The user should be able to click an option for a specific dataset to be able to contribute to it. The method of contribution, should
		be a link to the data to store, place to upload scripts, place to upload Jupyter Notebooks, docker config file OR link to generate
		a file for the configuration. 
	Create Jupyter-Hub instance:
		-User should be able to launch a generic instance of Jupyter-Hub in order to house the project (and run it I think, might need
		to clarify this a little). The instance is based on a generic profile by the OCDX engine(idk). 
	Create Specific Jupyter-Hub instance"
		-Same as creation of the generic, except this instance is configured according to a provided specification. 
	Download a Dataset or SNC files:
		-Displayed data sets and SNC files to the user should have an option available to download said data and files to their local machine.
	Generate or Upload manifest:
		-A manifest should be generated for a user based on a provided form and must be completed, or a complete manifest can be uploaded 
		directly. 
	Save:
		-Same functionality as contribution to the existing dataset, just offering that option through the interface of Jupyter before they 
		exit the instance. 
	(THE USE CASE "SEARCH ON MANIFEST" IS GIVEN BUT I AM NOT SURE HOW IT IS DIFFERENT FROM BROWSE MANIFEST?)
	Spawn Jupyter-Hub instance:
		-Create a JH instance based on a specific dataset and/or SNC files. Datasets can be opened independently, SNC must open with
		its corresponding data. 
	Upload New Dataset and Optionally SNC files. 	


	some categories of data (to start thinking about it):
		Need data for the manifests, including SNC files and dataset files
		
		Need user data, for logging in and their account features

		Need organizational data, such as name and version, to organize manifests


Data and Constraints:
	What limits on the data do we need?
		Size limits for datasets
		Only certain formats (?)

	data needs to be in a format that instances can interpret

	Browsing and Searching of manifests:
		By category, by user
		
	User Data:
		-Unique data per each user

	Jupyter-Hub instances:
	
	Manifests (Uploading, Downloading, Updating):
		Time of upload, who uploaded
		Time of any updates, who updated
		Record of downloads(?) - as in a given dataset has been downloaded x many times

System requirements:

	needs to be a user and browser friendly app/webpage

	server to host the web files/scripts/account information

	database to save json and other pertinent data

system contraints:

	server must have 24 hour availability to ensure customer access to data, including backup methods in case of an outage
	
	the system must be securely implemented in order to protect user identity and possible proxy implementation per JupyterHub

	authentic HTTPS server authentication 

	the system must be connected to the internet in order to communicate from server to client side for implementing instance manifestations

	server must be large enough to store data of multiple users and supply enough bandwidth and computing power for users operating concurrently

	implemented in JSON and compatibility with JupyterHub multi-user notebook server



